/*
 * Funambol is a mobile platform developed by Funambol, Inc.
 * Copyright (C) 2007 Funambol, Inc.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License version 3 as published by
 * the Free Software Foundation with the addition of the following permission
 * added to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED
 * WORK IN WHICH THE COPYRIGHT IS OWNED BY FUNAMBOL, FUNAMBOL DISCLAIMS THE
 * WARRANTY OF NON INFRINGEMENT  OF THIRD PARTY RIGHTS.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, see http://www.gnu.org/licenses or write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301 USA.
 *
 * You can contact Funambol, Inc. headquarters at 643 Bair Island Road, Suite
 * 305, Redwood City, CA 94063, USA, or at email address info@funambol.com.
 *
 * The interactive user interfaces in modified source and object code versions
 * of this program must display Appropriate Legal Notices, as required under
 * Section 5 of the GNU Affero General Public License version 3.
 *
 * In accordance with Section 7(b) of the GNU Affero General Public License
 * version 3, these Appropriate Legal Notices must retain the display of the
 * "Powered by Funambol" logo. If the display of the logo is not reasonably
 * feasible for technical reasons, the Appropriate Legal Notices must display
 * the words "Powered by Funambol".
 */


/**
 * Checks if the device which is synchronizing corresponds 
 * to the an Epoc Client and return the client type
 *
 * @version $Id: getEpocClient.bsh,v 1.4 2008-03-26 22:22:13 stefano_fornari Exp $
 */
private String MOTOROLA = "Moto";
private String SONY_ERICSSON = "SE";
private String UNKNOWN = "Unknown";
private String[] motorolaEpoc = {
        // development name of Motorola A1000 Epoc client
        "Symbian_1"      
        //...Add here other Motorola clients compliant with this synclet 
    };
    
private String[] sonyEricssonEpoc = {
        // development name of Sony Ericsson P900 Epoc client
        "Sony Ericsson_P910i",
        // Sony Ericsson P800 Epoc client
        "Sony Ericsson_P800"
        //...Add here other Sony Ericsson clients compliant with related synclet 
    };
    

/**
 * Checks whether a given model is a Motorola Epoc Client.
 *
 * @param model as retrieved from the device capabilities
 * @param
 * @return true only if the model is a Motorola Epoc Client
 */
String getEpocClient(String manufacturer, String model) {
    
    //Model and Manufacturer are not already 
    if (model==null||manufacturer==null) {
        return UNKNOWN;
    }
    
    String client = manufacturer + "_" + model;
    
    //Return true if the given Epoc client matches
    for (String motoClient : motorolaEpoc) {
        if (client.matches(motoClient)) {
            return MOTOROLA;
        }
    }
    
    //Return true if the given Epoc client matches
    for (String seClient : sonyEricssonEpoc) {
        if (client.matches(seClient)) {
            return SONY_ERICSSON;
        }
    }
    
    //... Otherwise return "Unknown"
    return UNKNOWN;
}
