/*
 * Funambol is a mobile platform developed by Funambol, Inc.
 * Copyright (C) 2007 Funambol, Inc.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License version 3 as published by
 * the Free Software Foundation with the addition of the following permission
 * added to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED
 * WORK IN WHICH THE COPYRIGHT IS OWNED BY FUNAMBOL, FUNAMBOL DISCLAIMS THE
 * WARRANTY OF NON INFRINGEMENT  OF THIRD PARTY RIGHTS.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, see http://www.gnu.org/licenses or write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301 USA.
 *
 * You can contact Funambol, Inc. headquarters at 643 Bair Island Road, Suite
 * 305, Redwood City, CA 94063, USA, or at email address info@funambol.com.
 *
 * The interactive user interfaces in modified source and object code versions
 * of this program must display Appropriate Legal Notices, as required under
 * Section 5 of the GNU Affero General Public License version 3.
 *
 * In accordance with Section 7(b) of the GNU Affero General Public License
 * version 3, these Appropriate Legal Notices must retain the display of the
 * "Powered by Funambol" logo. If the display of the logo is not reasonably
 * feasible for technical reasons, the Appropriate Legal Notices must display
 * the words "Powered by Funambol".
 */

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

import com.funambol.framework.core.*;
import com.funambol.framework.core.Sync4jException;
import com.funambol.framework.engine.pipeline.InputMessageProcessor;
import com.funambol.framework.engine.pipeline.MessageProcessingContext;
import com.funambol.framework.logging.FunambolLogger;
import com.funambol.framework.logging.FunambolLoggerFactory;

/**
 * This command adds empty tokens if they are missing in the data item in order
 * to force the deleting of the information.
 *
 * @version $Id: addVoidTokens.bsh,v 1.4 2008-03-26 22:22:13 stefano_fornari Exp $
 */
// ------------------------------------------------------ Synclet implementation
/**
 * Adds void tokens if it is missing in the input item.
 *
 * @param data the item's data
 * @param endLabel the last tokens of the data
 * @param mapTokens the Map with the void tokens to search
 *
 * @return the data with the void tokens if needs
 */
String addVoidTokens(String data, String endLabel, Map mapTokens) {

    int endPos = data.indexOf(endLabel);
    data = data.substring (0, endPos);
    StringBuffer missing = new StringBuffer(data);

    Iterator it = mapTokens.keySet().iterator();
    String token      = null;
    String tokenValue = null;

	Pattern p = null;
	Matcher m = null;

    while (it.hasNext()) {
        token      = (String)it.next();
        tokenValue = (String)mapTokens.get(token);

        p = Pattern.compile(token);
        m = p.matcher(data);
        if (!m.find()) {
            missing.append(tokenValue).append("\r\n");
        }
    }

    missing.append(endLabel).append("\r\n");
    return missing.toString();
}
