/*
 * Funambol is a mobile platform developed by Funambol, Inc.
 * Copyright (C) 2008 Funambol, Inc.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License version 3 as published by
 * the Free Software Foundation with the addition of the following permission
 * added to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED
 * WORK IN WHICH THE COPYRIGHT IS OWNED BY FUNAMBOL, FUNAMBOL DISCLAIMS THE
 * WARRANTY OF NON INFRINGEMENT  OF THIRD PARTY RIGHTS.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, see http://www.gnu.org/licenses or write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301 USA.
 *
 * You can contact Funambol, Inc. headquarters at 643 Bair Island Road, Suite
 * 305, Redwood City, CA 94063, USA, or at email address info@funambol.com.
 *
 * The interactive user interfaces in modified source and object code versions
 * of this program must display Appropriate Legal Notices, as required under
 * Section 5 of the GNU Affero General Public License version 3.
 *
 * In accordance with Section 7(b) of the GNU Affero General Public License
 * version 3, these Appropriate Legal Notices must retain the display of the
 * "Powered by Funambol" logo. If the display of the logo is not reasonably
 * feasible for technical reasons, the Appropriate Legal Notices must display
 * the words "Powered by Funambol".
 */

import java.util.ArrayList;

import com.funambol.framework.core.CTCap;
import com.funambol.framework.core.DataStore;
import com.funambol.framework.core.DevInf;
import com.funambol.framework.core.DevInfData;
import com.funambol.framework.core.DevInfItem;
import com.funambol.framework.core.PropParam;
import com.funambol.framework.core.Property;
import com.funambol.framework.core.Put;
import com.funambol.framework.core.SyncML;

/**
 * This command removes optional X-SYNCMLREF properties from the Contacts
 * device capabilities since they could make the sync fail with
 * Sony Ericsson P1i devices.
 *
 * @param message the SyncML message
 *
 * @version $Id: removeXSYNCMLREFParams.bsh,v 1.3 2008/10/28 02:21:06 scova Exp $
 */

public static void removeXSYNCMLREFParams(SyncML message) {

    //
    // Checks if the client sends the capabilities into Put command
    //
    ArrayList cmds = (ArrayList)message.syncBody.getCommands();
    for (int i=0; cmds != null && i<cmds.size(); i++) {
        AbstractCommand bodycmd = (AbstractCommand)cmds.get(i);
        
        if (bodycmd instanceof Put || bodycmd instanceof Results) {
            
			List items = (ArrayList)bodycmd.items;
            devInfData = ((DevInfItem)items.get(0)).devInfData;
			
			DevInf devInf = devInfData.getDevInf();

			ArrayList dss = devInf.getDataStores();
			for (int i=0; i< dss.size(); i++) {
			    DataStore ds = (DataStore)dss.get(i);
				
				// Checks if the DataStore is Contacts
			    if ("Contacts".equalsIgnoreCase(ds.getDisplayName())) {
				    handleContactInfo(ds);
				    break;
			    }
			}
        }
    }
}

/**
 * Analyzes the DataStore contacts info and handles the 
 * EMAIL and TEL properties.
 *
 * @param the Datastore object
 */
private static void handleContactInfo(DataStore ds) {
	
	ArrayList ctCaps = ds.getCTCaps();
	
	for (int i=0; i< ctCaps.size(); i++) {
		   CTCap ct = (CTCap)ctCaps.get(i);
		   
		   ArrayList props = ct.getProperties(); 
		   
		   for (int j=0; j< props.size(); j++) {
			   Property prop = (Property)props.get(j);
			   if ("EMAIL".equalsIgnoreCase(prop.getPropName())) {
					handleProperty(prop);
			   }
			   if ("TEL".equalsIgnoreCase(prop.getPropName())) {
					handleProperty(prop);
			   }
		   }
	   }
	
}

/**
 * Analyzes the CTCap properties and removes the X-SYNCMLREF
 * properties.
 *
 * @param the Property object
 */
private static void handleProperty(Property prop) {
	
	ArrayList propParams = prop.getPropParams();
	
	for (int i=0; i< propParams.size(); i++) {
		PropParam pp = (PropParam)propParams.get(i);
		
		ArrayList vEnums = pp.getValEnums();
		
		ArrayList vEnumsFinal = new ArrayList();
		
		for (int j=0; j< vEnums.size(); j++) {
			String vEnum = (String)vEnums.get(j);
			if(vEnum.startsWith("X-SYNCMLREF") && vEnum.length()>11){
				continue;
			}
			vEnumsFinal.add(vEnum);
		}
		
		pp.setValEnums(vEnumsFinal);
	}
}