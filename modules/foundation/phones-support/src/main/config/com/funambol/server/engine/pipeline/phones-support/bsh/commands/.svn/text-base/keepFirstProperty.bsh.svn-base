/*
 * Funambol is a mobile platform developed by Funambol, Inc.
 * Copyright (C) 2007 Funambol, Inc.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License version 3 as published by
 * the Free Software Foundation with the addition of the following permission
 * added to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED
 * WORK IN WHICH THE COPYRIGHT IS OWNED BY FUNAMBOL, FUNAMBOL DISCLAIMS THE
 * WARRANTY OF NON INFRINGEMENT  OF THIRD PARTY RIGHTS.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, see http://www.gnu.org/licenses or write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301 USA.
 *
 * You can contact Funambol, Inc. headquarters at 643 Bair Island Road, Suite
 * 305, Redwood City, CA 94063, USA, or at email address info@funambol.com.
 *
 * The interactive user interfaces in modified source and object code versions
 * of this program must display Appropriate Legal Notices, as required under
 * Section 5 of the GNU Affero General Public License version 3.
 *
 * In accordance with Section 7(b) of the GNU Affero General Public License
 * version 3, these Appropriate Legal Notices must retain the display of the
 * "Powered by Funambol" logo. If the display of the logo is not reasonably
 * feasible for technical reasons, the Appropriate Legal Notices must display
 * the words "Powered by Funambol".
 */
 
import java.util.regex.Pattern;
import java.util.regex.Matcher;
 
/**
 * Removes all occurrences of a given one-line property but the first one.
 *  
 * Usage example:
 *  the following vcard fragment:
 *      ...
 *      TEL;PREF:1234 
 *      ..
 *      TEL:6789  
 *      ...    
 *  is changed by the statement: 
 *      keepFirstProperty(data, "TEL(;PREF)?", "TEL");
 *  as follows:
 *      ...
 *      TEL:1234 
 *      ...    
 *
 * @param data the data to modify
 * @param oldProperty the property to replace (expressed as a regular expression)
 * @param newProperty the property name to be set instead of the original one
 *
 * @return the modified data
 *
 * @version $Id: keepFirstProperty.bsh,v 1.3 2008-03-26 22:22:13 stefano_fornari Exp $
 */
String keepFirstProperty(String data, String oldProperty, String newProperty) {

	Pattern p = Pattern.compile("(\\r)?\\n" + oldProperty + ":[^\\r\\n]*");
	Matcher m = p.matcher(data);
	StringBuffer sb = new StringBuffer();
        if (m.find()) {
            String firstMatch = m.group();
            if (newProperty != null) {
                firstMatch = firstMatch.replaceFirst(oldProperty, newProperty);
            }
            m.appendReplacement(sb, firstMatch);
            
            while (m.find()) {
                m.appendReplacement(sb, "");
            }
        }
        m.appendTail(sb);

    return sb.toString();
}

String keepFirstProperty(String data, String property) {

	return keepFirstProperty(data, property, null);
}
